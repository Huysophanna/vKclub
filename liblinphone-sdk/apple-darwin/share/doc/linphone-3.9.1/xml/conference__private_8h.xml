<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="conference__private_8h" kind="file" language="C++">
    <compoundname>conference_private.h</compoundname>
    <includes refid="linphonecore_8h" local="yes">linphonecore.h</includes>
    <includes refid="conference_8h" local="yes">conference.h</includes>
    <includedby refid="linphonecall_8c" local="yes">linphonecall.c</includedby>
    <includedby refid="linphonecore_8c" local="yes">linphonecore.c</includedby>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="conference__private_8h_1ae04b3d9035c9bfa2d87012539bf7800f" prot="public" static="no">
        <name>LinphoneConferenceClass</name>
        <enumvalue id="conference__private_8h_1ae04b3d9035c9bfa2d87012539bf7800fa8c48e18ff5305b1d367675447b9e2eb1" prot="public">
          <name>LinphoneConferenceClassLocal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="conference__private_8h_1ae04b3d9035c9bfa2d87012539bf7800fac9d2a3c426f084382f2363db4bc840ec" prot="public">
          <name>LinphoneConferenceClassRemote</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="35" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="enum" id="conference__private_8h_1aa2e6b2ff5fe6b6948877b60185d9547d" prot="public" static="no">
        <name>LinphoneConferenceState</name>
        <enumvalue id="conference__private_8h_1aa2e6b2ff5fe6b6948877b60185d9547daaf76deb612651d71adef472ca2f40496" prot="public">
          <name>LinphoneConferenceStopped</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="conference__private_8h_1aa2e6b2ff5fe6b6948877b60185d9547dae0455093f8bf474937db015377820e5b" prot="public">
          <name>LinphoneConferenceStarting</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="conference__private_8h_1aa2e6b2ff5fe6b6948877b60185d9547da49bab913fa47feeaab74ce32076c57bd" prot="public">
          <name>LinphoneConferenceReady</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="conference__private_8h_1aa2e6b2ff5fe6b6948877b60185d9547da2d5e4cb8572d792820242a8321d92bfa" prot="public">
          <name>LinphoneConferenceStartingFailed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of states used by <ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="43" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" bodystart="43" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="conference__private_8h_1a4cff0f13967919cc356d07599136b480" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* LinphoneConferenceStateChangedCb) (LinphoneConference *conference, LinphoneConferenceState new_state, void *user_data)</definition>
        <argsstring>)(LinphoneConference *conference, LinphoneConferenceState new_state, void *user_data)</argsstring>
        <name>LinphoneConferenceStateChangedCb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of the funtion to pass as callback to linphone_conference_params_set_state_changed_callback() <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conference</parametername>
</parameternamelist>
<parameterdescription>
<para>The conference instance which the state has changed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_state</parametername>
</parameternamelist>
<parameterdescription>
<para>The new state of the conferenece </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pass to user_data while linphone_conference_params_set_state_changed_callback() was being called </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="55" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="conference__private_8h_1af6c4f8251a203dca35d7f5177dac010b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* linphone_conference_state_to_string</definition>
        <argsstring>(LinphoneConferenceState state)</argsstring>
        <name>linphone_conference_state_to_string</name>
        <param>
          <type>LinphoneConferenceState</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A function to converte a #LinphoneConferenceState into a string </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a5aa2b64407ec22b7a67211fdf631781e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_conference_params_set_state_changed_callback</definition>
        <argsstring>(LinphoneConferenceParams *params, LinphoneConferenceStateChangedCb cb, void *user_data)</argsstring>
        <name>linphone_conference_params_set_state_changed_callback</name>
        <param>
          <type><ref refid="group__call__control_1ga429832cde08ea2f2c14a17dfd6428090" kindref="member">LinphoneConferenceParams</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>LinphoneConferenceStateChangedCb</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a callback which will be called when the state of the conferenec is switching <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="group__call__control_1ga429832cde08ea2f2c14a17dfd6428090" kindref="member">LinphoneConferenceParams</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback to call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to pass to the user_data parameter of #LinphoneConferenceStateChangedCb </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a0c7e612027346a701f188b0d847f676f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
        <definition>LinphoneConference* linphone_local_conference_new</definition>
        <argsstring>(LinphoneCore *core)</argsstring>
        <name>linphone_local_conference_new</name>
        <param>
          <type><ref refid="group__initializing_1gaa5cf635b82dd338e7ee2dd3599d05f0a" kindref="member">LinphoneCore</ref> *</type>
          <declname>core</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1aaab6ebf83d801e3fd02a6d611ca698be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
        <definition>LinphoneConference* linphone_local_conference_new_with_params</definition>
        <argsstring>(LinphoneCore *core, const LinphoneConferenceParams *params)</argsstring>
        <name>linphone_local_conference_new_with_params</name>
        <param>
          <type><ref refid="group__initializing_1gaa5cf635b82dd338e7ee2dd3599d05f0a" kindref="member">LinphoneCore</ref> *</type>
          <declname>core</declname>
        </param>
        <param>
          <type>const <ref refid="group__call__control_1ga429832cde08ea2f2c14a17dfd6428090" kindref="member">LinphoneConferenceParams</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a13e75b13e54fc10c57d91114d00b7383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
        <definition>LinphoneConference* linphone_remote_conference_new</definition>
        <argsstring>(LinphoneCore *core)</argsstring>
        <name>linphone_remote_conference_new</name>
        <param>
          <type><ref refid="group__initializing_1gaa5cf635b82dd338e7ee2dd3599d05f0a" kindref="member">LinphoneCore</ref> *</type>
          <declname>core</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a03e913123a629d9871a31b2a55b72392" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
        <definition>LinphoneConference* linphone_remote_conference_new_with_params</definition>
        <argsstring>(LinphoneCore *core, const LinphoneConferenceParams *params)</argsstring>
        <name>linphone_remote_conference_new_with_params</name>
        <param>
          <type><ref refid="group__initializing_1gaa5cf635b82dd338e7ee2dd3599d05f0a" kindref="member">LinphoneCore</ref> *</type>
          <declname>core</declname>
        </param>
        <param>
          <type>const <ref refid="group__call__control_1ga429832cde08ea2f2c14a17dfd6428090" kindref="member">LinphoneConferenceParams</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a00fde8dd6674d55d2515d6c485d9402e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_conference_free</definition>
        <argsstring>(LinphoneConference *obj)</argsstring>
        <name>linphone_conference_free</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a62f680a5ead5bbb7af8cae30ed3e1651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LinphoneConferenceState</type>
        <definition>LinphoneConferenceState linphone_conference_get_state</definition>
        <argsstring>(const LinphoneConference *obj)</argsstring>
        <name>linphone_conference_get_state</name>
        <param>
          <type>const <ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the state of a conference </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a3029926e2689673824ac0457414a64d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int linphone_conference_add_participant</definition>
        <argsstring>(LinphoneConference *obj, LinphoneCall *call)</argsstring>
        <name>linphone_conference_add_participant</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac0a4861d7c4702c64f7106f2b893c69e" kindref="member">LinphoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a0e262d168765bf0eacb5ba3cac292adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int linphone_conference_remove_participant_with_call</definition>
        <argsstring>(LinphoneConference *obj, LinphoneCall *call)</argsstring>
        <name>linphone_conference_remove_participant_with_call</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac0a4861d7c4702c64f7106f2b893c69e" kindref="member">LinphoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1ad7b225a06c32a7a456e50e860da03e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int linphone_conference_terminate</definition>
        <argsstring>(LinphoneConference *obj)</argsstring>
        <name>linphone_conference_terminate</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1af090bb2d04bcdf4d5fa0b0e9e16f4ec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int linphone_conference_get_size</definition>
        <argsstring>(const LinphoneConference *obj)</argsstring>
        <name>linphone_conference_get_size</name>
        <param>
          <type>const <ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a0845fea7289b002fbd5d6f303b18c02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int linphone_conference_enter</definition>
        <argsstring>(LinphoneConference *obj)</argsstring>
        <name>linphone_conference_enter</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1ab42e9cf5041cfb184559875de1f7cab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int linphone_conference_leave</definition>
        <argsstring>(LinphoneConference *obj)</argsstring>
        <name>linphone_conference_leave</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1abcc6966759191e983b12109b376012f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t linphone_conference_is_in</definition>
        <argsstring>(const LinphoneConference *obj)</argsstring>
        <name>linphone_conference_is_in</name>
        <param>
          <type>const <ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a927ca16f2be88222510af467d328d62e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AudioStream *</type>
        <definition>AudioStream* linphone_conference_get_audio_stream</definition>
        <argsstring>(const LinphoneConference *obj)</argsstring>
        <name>linphone_conference_get_audio_stream</name>
        <param>
          <type>const <ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1adab397ecb5786b9924eafb51661663aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int linphone_conference_mute_microphone</definition>
        <argsstring>(LinphoneConference *obj, bool_t val)</argsstring>
        <name>linphone_conference_mute_microphone</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1accca6f2a14dfe6232f40a18a51a14957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t linphone_conference_microphone_is_muted</definition>
        <argsstring>(const LinphoneConference *obj)</argsstring>
        <name>linphone_conference_microphone_is_muted</name>
        <param>
          <type>const <ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1aa90e6b1c40dc6e84482833eed6e5bc5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float linphone_conference_get_input_volume</definition>
        <argsstring>(const LinphoneConference *obj)</argsstring>
        <name>linphone_conference_get_input_volume</name>
        <param>
          <type>const <ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1afe9d1bdd9807cdeaee5e88e696b79572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int linphone_conference_start_recording</definition>
        <argsstring>(LinphoneConference *obj, const char *path)</argsstring>
        <name>linphone_conference_start_recording</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a546d583398741fd406b716b961f6d064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int linphone_conference_stop_recording</definition>
        <argsstring>(LinphoneConference *obj)</argsstring>
        <name>linphone_conference_stop_recording</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a5f043742c620a8e9d716dc62f256592a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_conference_on_call_stream_starting</definition>
        <argsstring>(LinphoneConference *obj, LinphoneCall *call, bool_t is_paused_by_remote)</argsstring>
        <name>linphone_conference_on_call_stream_starting</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac0a4861d7c4702c64f7106f2b893c69e" kindref="member">LinphoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>is_paused_by_remote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a71b9310b6f351beb8a4a34481d6e66af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_conference_on_call_stream_stopping</definition>
        <argsstring>(LinphoneConference *obj, LinphoneCall *call)</argsstring>
        <name>linphone_conference_on_call_stream_stopping</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac0a4861d7c4702c64f7106f2b893c69e" kindref="member">LinphoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1abf942f1c84cf61c486a8d7a44ef7f06b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_conference_on_call_terminating</definition>
        <argsstring>(LinphoneConference *obj, LinphoneCall *call)</argsstring>
        <name>linphone_conference_on_call_terminating</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac0a4861d7c4702c64f7106f2b893c69e" kindref="member">LinphoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conference__private_8h_1a0b2f17db368168c30edbda1749b2ed74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t linphone_conference_check_class</definition>
        <argsstring>(LinphoneConference *obj, LinphoneConferenceClass _class)</argsstring>
        <name>linphone_conference_check_class</name>
        <param>
          <type><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>LinphoneConferenceClass</type>
          <declname>_class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h" line="105" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conference_private.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Tue<sp/>Jan<sp/>12,<sp/>2015</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/><sp/>2015<sp/><sp/>Belledonne<sp/>Communications</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Author:<sp/>Linphone&apos;s<sp/>team</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Email<sp/>info@belledonne-communications.com</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFERENCE_PRIVATE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONFERENCE_PRIVATE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;linphonecore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;conference.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinphoneConferenceClassLocal,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinphoneConferenceClassRemote</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/>LinphoneConferenceClass;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinphoneConferenceStopped,<sp/></highlight><highlight class="comment">/*&lt;<sp/>Initial<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinphoneConferenceStarting,<sp/></highlight><highlight class="comment">/*&lt;<sp/>A<sp/>participant<sp/>has<sp/>been<sp/>added<sp/>but<sp/>the<sp/>conference<sp/>is<sp/>not<sp/>running<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinphoneConferenceReady,<sp/></highlight><highlight class="comment">/*&lt;<sp/>The<sp/>conference<sp/>is<sp/>running<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinphoneConferenceStartingFailed<sp/></highlight><highlight class="comment">/*&lt;<sp/>A<sp/>participant<sp/>has<sp/>been<sp/>added<sp/>but<sp/>the<sp/>initialization<sp/>of<sp/>the<sp/>conference<sp/>has<sp/>failed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/>LinphoneConferenceState;</highlight></codeline>
<codeline lineno="55"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*LinphoneConferenceStateChangedCb)(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*conference,<sp/>LinphoneConferenceState<sp/>new_state,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*linphone_conference_state_to_string(LinphoneConferenceState<sp/>state);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>linphone_conference_params_set_state_changed_callback(<ref refid="group__call__control_1ga429832cde08ea2f2c14a17dfd6428090" kindref="member">LinphoneConferenceParams</ref><sp/>*params,<sp/>LinphoneConferenceStateChangedCb<sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*linphone_local_conference_new(<ref refid="struct__LinphoneCore" kindref="compound">LinphoneCore</ref><sp/>*core);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*linphone_local_conference_new_with_params(<ref refid="struct__LinphoneCore" kindref="compound">LinphoneCore</ref><sp/>*core,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__call__control_1ga429832cde08ea2f2c14a17dfd6428090" kindref="member">LinphoneConferenceParams</ref><sp/>*params);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*linphone_remote_conference_new(<ref refid="struct__LinphoneCore" kindref="compound">LinphoneCore</ref><sp/>*core);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*linphone_remote_conference_new_with_params(<ref refid="struct__LinphoneCore" kindref="compound">LinphoneCore</ref><sp/>*core,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__call__control_1ga429832cde08ea2f2c14a17dfd6428090" kindref="member">LinphoneConferenceParams</ref><sp/>*params);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>linphone_conference_free(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">LinphoneConferenceState<sp/>linphone_conference_get_state(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linphone_conference_add_participant(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj,<sp/><ref refid="struct__LinphoneCall" kindref="compound">LinphoneCall</ref><sp/>*call);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linphone_conference_remove_participant_with_call(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj,<sp/><ref refid="struct__LinphoneCall" kindref="compound">LinphoneCall</ref><sp/>*call);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linphone_conference_terminate(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linphone_conference_get_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linphone_conference_enter(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linphone_conference_leave(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">bool_t<sp/>linphone_conference_is_in(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">AudioStream<sp/>*linphone_conference_get_audio_stream(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linphone_conference_mute_microphone(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj,<sp/>bool_t<sp/>val);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">bool_t<sp/>linphone_conference_microphone_is_muted(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>linphone_conference_get_input_volume(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linphone_conference_start_recording(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linphone_conference_stop_recording(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>linphone_conference_on_call_stream_starting(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj,<sp/><ref refid="struct__LinphoneCall" kindref="compound">LinphoneCall</ref><sp/>*call,<sp/>bool_t<sp/>is_paused_by_remote);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>linphone_conference_on_call_stream_stopping(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj,<sp/><ref refid="struct__LinphoneCall" kindref="compound">LinphoneCall</ref><sp/>*call);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>linphone_conference_on_call_terminating(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj,<sp/><ref refid="struct__LinphoneCall" kindref="compound">LinphoneCall</ref><sp/>*call);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">LINPHONE_PUBLIC<sp/>bool_t<sp/>linphone_conference_check_class(<ref refid="group__call__control_1gaf737b61f13b90ddd6895f7a530aa2165" kindref="member">LinphoneConference</ref><sp/>*obj,<sp/>LinphoneConferenceClass<sp/>_class);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//CONFERENCE_PRIVATE_H</highlight></codeline>
    </programlisting>
    <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/conference_private.h"/>
  </compounddef>
</doxygen>
