<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="xmlrpc_8c" kind="file" language="C++">
    <compoundname>xmlrpc.c</compoundname>
    <includes refid="linphonecore_8h" local="yes">linphonecore.h</includes>
    <includes refid="private_8h" local="yes">private.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">libxml/tree.h</includes>
    <includes local="no">libxml/xmlwriter.h</includes>
    <incdepgraph>
      <node id="321">
        <label>libxml/xmlwriter.h</label>
      </node>
      <node id="318">
        <label>xmlrpc.c</label>
        <link refid="xmlrpc.c"/>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
      </node>
      <node id="319">
        <label>string.h</label>
      </node>
      <node id="320">
        <label>libxml/tree.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="xmlrpc_8c_1a68dde3c29f1511de1a2cb87bf6be63b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BELLE_SIP_DECLARE_NO_IMPLEMENTED_INTERFACES</definition>
        <argsstring>(LinphoneXmlRpcRequestCbs)</argsstring>
        <name>BELLE_SIP_DECLARE_NO_IMPLEMENTED_INTERFACES</name>
        <param>
          <type><ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1a830b7dbbaea2198e68d65e7a33d623b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BELLE_SIP_INSTANCIATE_VPTR</definition>
        <argsstring>(LinphoneXmlRpcRequestCbs, belle_sip_object_t, NULL, NULL, NULL, FALSE)</argsstring>
        <name>BELLE_SIP_INSTANCIATE_VPTR</name>
        <param>
          <type><ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref></type>
        </param>
        <param>
          <type>belle_sip_object_t</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>FALSE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1aa3cc7b06943dfa1622c06250a9f1fa47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref> *</type>
        <definition>static LinphoneXmlRpcRequestCbs* linphone_xml_rpc_request_cbs_new</definition>
        <argsstring>(void)</argsstring>
        <name>linphone_xml_rpc_request_cbs_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="38" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga22ca4e91e5fdc4ece6da93f78ec44790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref> *</type>
        <definition>LinphoneXmlRpcRequestCbs* linphone_xml_rpc_request_cbs_ref</definition>
        <argsstring>(LinphoneXmlRpcRequestCbs *cbs)</argsstring>
        <name>linphone_xml_rpc_request_cbs_ref</name>
        <param>
          <type><ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref> *</type>
          <declname>cbs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Acquire a reference to a LinphoneXmlRpcRequestCbs object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequestCbs object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The same LinphoneXmlRpcRequestCbs object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="42" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga9fe1ea2ad50d5da7030532b6262860c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_xml_rpc_request_cbs_unref</definition>
        <argsstring>(LinphoneXmlRpcRequestCbs *cbs)</argsstring>
        <name>linphone_xml_rpc_request_cbs_unref</name>
        <param>
          <type><ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref> *</type>
          <declname>cbs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release a reference to a LinphoneXmlRpcRequestCbs object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequestCbs object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="47" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gacc604493e3f4ce0b4a1b960e029845b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* linphone_xml_rpc_request_cbs_get_user_data</definition>
        <argsstring>(const LinphoneXmlRpcRequestCbs *cbs)</argsstring>
        <name>linphone_xml_rpc_request_cbs_get_user_data</name>
        <param>
          <type>const <ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref> *</type>
          <declname>cbs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the user pointer associated with a LinphoneXmlRpcRequestCbs object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequestCbs object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The user pointer associated with the LinphoneXmlRpcRequestCbs object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="51" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga0aaa72f83fd6cb43dfdc4c1b75401fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_xml_rpc_request_cbs_set_user_data</definition>
        <argsstring>(LinphoneXmlRpcRequestCbs *cbs, void *ud)</argsstring>
        <name>linphone_xml_rpc_request_cbs_set_user_data</name>
        <param>
          <type><ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref> *</type>
          <declname>cbs</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign a user pointer to a LinphoneXmlRpcRequestCbs object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequestCbs object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ud</parametername>
</parameternamelist>
<parameterdescription>
<para>The user pointer to associate with the LinphoneXmlRpcRequestCbs object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="55" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga33be73f029f8432e9cc6636a9cc22eee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1gaf6443bc25b7cbab080bd6a2b19738a6f" kindref="member">LinphoneXmlRpcRequestCbsResponseCb</ref></type>
        <definition>LinphoneXmlRpcRequestCbsResponseCb linphone_xml_rpc_request_cbs_get_response</definition>
        <argsstring>(const LinphoneXmlRpcRequestCbs *cbs)</argsstring>
        <name>linphone_xml_rpc_request_cbs_get_response</name>
        <param>
          <type>const <ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref> *</type>
          <declname>cbs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the response callback. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequestCbs object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current response callback. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="59" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga0de27af78035916a98ab886a61d5d770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_xml_rpc_request_cbs_set_response</definition>
        <argsstring>(LinphoneXmlRpcRequestCbs *cbs, LinphoneXmlRpcRequestCbsResponseCb cb)</argsstring>
        <name>linphone_xml_rpc_request_cbs_set_response</name>
        <param>
          <type><ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref> *</type>
          <declname>cbs</declname>
        </param>
        <param>
          <type><ref refid="group__misc_1gaf6443bc25b7cbab080bd6a2b19738a6f" kindref="member">LinphoneXmlRpcRequestCbsResponseCb</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the response callback. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequestCbs object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The response callback to be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="63" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1aa338742d8798592cc67e458a7fdd7f6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void format_request</definition>
        <argsstring>(LinphoneXmlRpcRequest *request)</argsstring>
        <name>format_request</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="68" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="68" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1ac1fd2861e381dbb5a69ebf6b0b35abb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_arg</definition>
        <argsstring>(LinphoneXmlRpcArg *arg)</argsstring>
        <name>free_arg</name>
        <param>
          <type><ref refid="struct__LinphoneXmlRpcArg" kindref="compound">LinphoneXmlRpcArg</ref> *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="150" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="150" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1a99cd39900d68846928d2279593e848ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void process_io_error_from_post_xml_rpc_request</definition>
        <argsstring>(void *data, const belle_sip_io_error_event_t *event)</argsstring>
        <name>process_io_error_from_post_xml_rpc_request</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const belle_sip_io_error_event_t *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="157" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="157" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1ad6c0361be7b870241546f1d993672075" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void process_auth_requested_from_post_xml_rpc_request</definition>
        <argsstring>(void *data, belle_sip_auth_event_t *event)</argsstring>
        <name>process_auth_requested_from_post_xml_rpc_request</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>belle_sip_auth_event_t *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="167" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="167" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1a6764ab6b0a6d555e9e560fc33b380dac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parse_valid_xml_rpc_response</definition>
        <argsstring>(LinphoneXmlRpcRequest *request, const char *response_body)</argsstring>
        <name>parse_valid_xml_rpc_response</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>response_body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="177" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="177" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1ac8be7bfd980f53afd057e6711965121d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void notify_xml_rpc_error</definition>
        <argsstring>(LinphoneXmlRpcRequest *request)</argsstring>
        <name>notify_xml_rpc_error</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="214" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="214" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1ac90c7e445a3f77e94d09b79a70f11b17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void process_response_from_post_xml_rpc_request</definition>
        <argsstring>(void *data, const belle_http_response_event_t *event)</argsstring>
        <name>process_response_from_post_xml_rpc_request</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const belle_http_response_event_t *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="221" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="221" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1a72bb5bff0649040e1878998ace99e589" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
        <definition>static LinphoneXmlRpcRequest* _linphone_xml_rpc_request_new</definition>
        <argsstring>(const char *method, LinphoneXmlRpcArgType return_type)</argsstring>
        <name>_linphone_xml_rpc_request_new</name>
        <param>
          <type>const char *</type>
          <declname>method</declname>
        </param>
        <param>
          <type><ref refid="group__misc_1ga29aa8f6ff6f9b210ac8f0b93112879b4" kindref="member">LinphoneXmlRpcArgType</ref></type>
          <declname>return_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="237" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="237" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1aa7c9169f585790179e5620310b828cc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _linphone_xml_rpc_request_add_int_arg</definition>
        <argsstring>(LinphoneXmlRpcRequest *request, int value)</argsstring>
        <name>_linphone_xml_rpc_request_add_int_arg</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="246" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="246" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1ac824c3980b474f165166b13de6be7e98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _linphone_xml_rpc_request_add_string_arg</definition>
        <argsstring>(LinphoneXmlRpcRequest *request, const char *value)</argsstring>
        <name>_linphone_xml_rpc_request_add_string_arg</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="253" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="253" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1a89e824011e2db03bb7860598a974bcf5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _linphone_xml_rpc_request_destroy</definition>
        <argsstring>(LinphoneXmlRpcRequest *request)</argsstring>
        <name>_linphone_xml_rpc_request_destroy</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="260" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="260" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1a0167a94bfc861fb91a34baae02d764ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _linphone_xml_rpc_session_destroy</definition>
        <argsstring>(LinphoneXmlRpcSession *session)</argsstring>
        <name>_linphone_xml_rpc_session_destroy</name>
        <param>
          <type><ref refid="group__misc_1gac46af5ea6d192456169de5d0ac39dc0b" kindref="member">LinphoneXmlRpcSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="270" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1aa9c4db61014bbdf87df764edcb527935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BELLE_SIP_DECLARE_NO_IMPLEMENTED_INTERFACES</definition>
        <argsstring>(LinphoneXmlRpcRequest)</argsstring>
        <name>BELLE_SIP_DECLARE_NO_IMPLEMENTED_INTERFACES</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1ac11757d05c542195489a128f639ddc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BELLE_SIP_DECLARE_NO_IMPLEMENTED_INTERFACES</definition>
        <argsstring>(LinphoneXmlRpcSession)</argsstring>
        <name>BELLE_SIP_DECLARE_NO_IMPLEMENTED_INTERFACES</name>
        <param>
          <type><ref refid="group__misc_1gac46af5ea6d192456169de5d0ac39dc0b" kindref="member">LinphoneXmlRpcSession</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1a6be692fb5bb273c9bb85e40a2d3a3cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BELLE_SIP_INSTANCIATE_VPTR</definition>
        <argsstring>(LinphoneXmlRpcRequest, belle_sip_object_t,(belle_sip_object_destroy_t) _linphone_xml_rpc_request_destroy, NULL, NULL, FALSE)</argsstring>
        <name>BELLE_SIP_INSTANCIATE_VPTR</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref></type>
        </param>
        <param>
          <type>belle_sip_object_t</type>
        </param>
        <param>
          <type>(belle_sip_object_destroy_t)</type>
          <declname>_linphone_xml_rpc_request_destroy</declname>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>FALSE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlrpc_8c_1abd70d64c5ed1a9a20ba1e3b74ea95443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BELLE_SIP_INSTANCIATE_VPTR</definition>
        <argsstring>(LinphoneXmlRpcSession, belle_sip_object_t,(belle_sip_object_destroy_t) _linphone_xml_rpc_session_destroy, NULL, NULL, FALSE)</argsstring>
        <name>BELLE_SIP_INSTANCIATE_VPTR</name>
        <param>
          <type><ref refid="group__misc_1gac46af5ea6d192456169de5d0ac39dc0b" kindref="member">LinphoneXmlRpcSession</ref></type>
        </param>
        <param>
          <type>belle_sip_object_t</type>
        </param>
        <param>
          <type>(belle_sip_object_destroy_t)</type>
          <declname>_linphone_xml_rpc_session_destroy</declname>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>FALSE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga1c48c4b11f5e5125c55a5aab2fc6c9ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
        <definition>LinphoneXmlRpcRequest* linphone_xml_rpc_request_new</definition>
        <argsstring>(const char *method, LinphoneXmlRpcArgType return_type)</argsstring>
        <name>linphone_xml_rpc_request_new</name>
        <param>
          <type>const char *</type>
          <declname>method</declname>
        </param>
        <param>
          <type><ref refid="group__misc_1ga29aa8f6ff6f9b210ac8f0b93112879b4" kindref="member">LinphoneXmlRpcArgType</ref></type>
          <declname>return_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new LinphoneXmlRpcRequest object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">method</parametername>
</parameternamelist>
<parameterdescription>
<para>The XML-RPC method to call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">return_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected XML-RPC response type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new LinphoneXmlRpcRequest object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="292" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="292" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gac4a0a101d04903a406339315660ec4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
        <definition>LinphoneXmlRpcRequest* linphone_xml_rpc_request_new_with_args</definition>
        <argsstring>(const char *method, LinphoneXmlRpcArgType return_type,...)</argsstring>
        <name>linphone_xml_rpc_request_new_with_args</name>
        <param>
          <type>const char *</type>
          <declname>method</declname>
        </param>
        <param>
          <type><ref refid="group__misc_1ga29aa8f6ff6f9b210ac8f0b93112879b4" kindref="member">LinphoneXmlRpcArgType</ref></type>
          <declname>return_type</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new LinphoneXmlRpcRequest object giving the arguments to the method call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">method</parametername>
</parameternamelist>
<parameterdescription>
<para>The XML-RPC method to call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">return_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected XML-RPC response type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new LinphoneXmlRpcRequest object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="298" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="298" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gaecca690c97be9ed9fe805343deec62a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
        <definition>LinphoneXmlRpcRequest* linphone_xml_rpc_request_ref</definition>
        <argsstring>(LinphoneXmlRpcRequest *request)</argsstring>
        <name>linphone_xml_rpc_request_ref</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Acquire a reference to the XML-RPC request. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The same LinphoneXmlRpcRequest object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="323" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gac86ca7658bc3d9216a4549f7a4591932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_xml_rpc_request_unref</definition>
        <argsstring>(LinphoneXmlRpcRequest *request)</argsstring>
        <name>linphone_xml_rpc_request_unref</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release reference to the XML-RPC request. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="328" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="328" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gadbfd9726dbdbf5ff325b5b5707f739bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* linphone_xml_rpc_request_get_user_data</definition>
        <argsstring>(const LinphoneXmlRpcRequest *request)</argsstring>
        <name>linphone_xml_rpc_request_get_user_data</name>
        <param>
          <type>const <ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the user pointer associated with the XML-RPC request. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The user pointer associated with the XML-RPC request. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="332" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga9e8431c4fda6517cb7f6d032100bd87d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_xml_rpc_request_set_user_data</definition>
        <argsstring>(LinphoneXmlRpcRequest *request, void *ud)</argsstring>
        <name>linphone_xml_rpc_request_set_user_data</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign a user pointer to the XML-RPC request. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ud</parametername>
</parameternamelist>
<parameterdescription>
<para>The user pointer to associate with the XML-RPC request. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="336" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gaab4a08b402cea8c064636fae56a5c979" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_xml_rpc_request_add_int_arg</definition>
        <argsstring>(LinphoneXmlRpcRequest *request, int value)</argsstring>
        <name>linphone_xml_rpc_request_add_int_arg</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an integer argument to an XML-RPC request. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value of the added argument. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="340" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="340" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga53187e8e8620520072168481b920af8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_xml_rpc_request_add_string_arg</definition>
        <argsstring>(LinphoneXmlRpcRequest *request, const char *value)</argsstring>
        <name>linphone_xml_rpc_request_add_string_arg</name>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a string argument to an XML-RPC request. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value of the added argument. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="345" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gacdd94b9dd3ac3ca10794772e2bbc8502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1gae904819121257097ad42e40e15d456e4" kindref="member">LinphoneXmlRpcRequestCbs</ref> *</type>
        <definition>LinphoneXmlRpcRequestCbs* linphone_xml_rpc_request_get_callbacks</definition>
        <argsstring>(const LinphoneXmlRpcRequest *request)</argsstring>
        <name>linphone_xml_rpc_request_get_callbacks</name>
        <param>
          <type>const <ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the LinphoneXmlRpcRequestCbs object associated with a LinphoneXmlRpcRequest. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The LinphoneXmlRpcRequestCbs object associated with the LinphoneXmlRpcRequest. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="350" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga72a6b0b5c193c2ec8e246b1325398e06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* linphone_xml_rpc_request_get_content</definition>
        <argsstring>(const LinphoneXmlRpcRequest *request)</argsstring>
        <name>linphone_xml_rpc_request_get_content</name>
        <param>
          <type>const <ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the content of the XML-RPC request. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The string representation of the content of the XML-RPC request. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="354" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="354" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gacee067f188ad31229c552091e221477d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1ga206d079816de950cfc54433f0db54e68" kindref="member">LinphoneXmlRpcStatus</ref></type>
        <definition>LinphoneXmlRpcStatus linphone_xml_rpc_request_get_status</definition>
        <argsstring>(const LinphoneXmlRpcRequest *request)</argsstring>
        <name>linphone_xml_rpc_request_get_status</name>
        <param>
          <type>const <ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the status of the XML-RPC request. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The status of the XML-RPC request. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="358" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="358" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga408683ade74e2c264cdfb632ffa9e7ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int linphone_xml_rpc_request_get_int_response</definition>
        <argsstring>(const LinphoneXmlRpcRequest *request)</argsstring>
        <name>linphone_xml_rpc_request_get_int_response</name>
        <param>
          <type>const <ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the response to an XML-RPC request sent with <ref refid="group__misc_1ga04d99efae20b1df40cf56505cd5aa0a5" kindref="member">linphone_xml_rpc_session_send_request()</ref> and returning an integer response. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The integer response to the XML-RPC request. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="362" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="362" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gacb8ee2886de3b4a01d874e239dd4f8ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* linphone_xml_rpc_request_get_string_response</definition>
        <argsstring>(const LinphoneXmlRpcRequest *request)</argsstring>
        <name>linphone_xml_rpc_request_get_string_response</name>
        <param>
          <type>const <ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the response to an XML-RPC request sent with <ref refid="group__misc_1ga04d99efae20b1df40cf56505cd5aa0a5" kindref="member">linphone_xml_rpc_session_send_request()</ref> and returning a string response. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcRequest object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The string response to the XML-RPC request. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="366" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="366" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gad906eec60ae17e3f0891920759d4d62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1gac46af5ea6d192456169de5d0ac39dc0b" kindref="member">LinphoneXmlRpcSession</ref> *</type>
        <definition>LinphoneXmlRpcSession* linphone_xml_rpc_session_new</definition>
        <argsstring>(LinphoneCore *core, const char *url)</argsstring>
        <name>linphone_xml_rpc_session_new</name>
        <param>
          <type><ref refid="group__initializing_1gaa5cf635b82dd338e7ee2dd3599d05f0a" kindref="member">LinphoneCore</ref> *</type>
          <declname>core</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new LinphoneXmlRpcSession object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">core</parametername>
</parameternamelist>
<parameterdescription>
<para>The LinphoneCore object used to send the XML-RPC requests. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">url</parametername>
</parameternamelist>
<parameterdescription>
<para>The URL of the XML-RPC server to send the XML-RPC requests to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new LinphoneXmlRpcSession object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="371" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="371" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga6fdddc46a583cdad27f9186b3aa01c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1gac46af5ea6d192456169de5d0ac39dc0b" kindref="member">LinphoneXmlRpcSession</ref> *</type>
        <definition>LinphoneXmlRpcSession* linphone_xml_rpc_session_ref</definition>
        <argsstring>(LinphoneXmlRpcSession *session)</argsstring>
        <name>linphone_xml_rpc_session_ref</name>
        <param>
          <type><ref refid="group__misc_1gac46af5ea6d192456169de5d0ac39dc0b" kindref="member">LinphoneXmlRpcSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Acquire a reference to the XML-RPC session. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcSession object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The same LinphoneXmlRpcSession object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="378" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="378" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga594c174060218a5d7f032dc4912d0b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_xml_rpc_session_unref</definition>
        <argsstring>(LinphoneXmlRpcSession *session)</argsstring>
        <name>linphone_xml_rpc_session_unref</name>
        <param>
          <type><ref refid="group__misc_1gac46af5ea6d192456169de5d0ac39dc0b" kindref="member">LinphoneXmlRpcSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release reference to the XML-RPC session. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcSession object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="383" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga4121beeab0869562a9d98275921eaa7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* linphone_xml_rpc_session_get_user_data</definition>
        <argsstring>(const LinphoneXmlRpcSession *session)</argsstring>
        <name>linphone_xml_rpc_session_get_user_data</name>
        <param>
          <type>const <ref refid="group__misc_1gac46af5ea6d192456169de5d0ac39dc0b" kindref="member">LinphoneXmlRpcSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the user pointer associated with the XML-RPC session. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcSession object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The user pointer associated with the XML-RPC session. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="387" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="387" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga777bcf84afd987f5c987d46e72dd1771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_xml_rpc_session_set_user_data</definition>
        <argsstring>(LinphoneXmlRpcSession *session, void *ud)</argsstring>
        <name>linphone_xml_rpc_session_set_user_data</name>
        <param>
          <type><ref refid="group__misc_1gac46af5ea6d192456169de5d0ac39dc0b" kindref="member">LinphoneXmlRpcSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign a user pointer to the XML-RPC session. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcSession object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ud</parametername>
</parameternamelist>
<parameterdescription>
<para>The user pointer to associate with the XML-RPC session. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="391" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="391" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga04d99efae20b1df40cf56505cd5aa0a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linphone_xml_rpc_session_send_request</definition>
        <argsstring>(LinphoneXmlRpcSession *session, LinphoneXmlRpcRequest *request)</argsstring>
        <name>linphone_xml_rpc_session_send_request</name>
        <param>
          <type><ref refid="group__misc_1gac46af5ea6d192456169de5d0ac39dc0b" kindref="member">LinphoneXmlRpcSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="group__misc_1ga7a93eeab19d58ffc25eff6254f995d53" kindref="member">LinphoneXmlRpcRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send an XML-RPC request. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>LinphoneXmlRpcSession object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>The LinphoneXmlRpcRequest to be sent. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" line="395" column="1" bodyfile="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c" bodystart="395" bodyend="423"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">linphone</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(C)<sp/>2010-2015<sp/>Belledonne<sp/>Communications<sp/>SARL</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment">modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="7"><highlight class="comment">as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2</highlight></codeline>
<codeline lineno="8"><highlight class="comment">of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment">along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment">Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;linphonecore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;private.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/tree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlwriter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">BELLE_SIP_DECLARE_NO_IMPLEMENTED_INTERFACES(<ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">BELLE_SIP_INSTANCIATE_VPTR(<ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref>,<sp/>belle_sip_object_t,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">//<sp/>destroy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">//<sp/>clone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">//<sp/>marshal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE</highlight></codeline>
<codeline lineno="36"><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref><sp/>*<sp/>linphone_xml_rpc_request_cbs_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>belle_sip_object_new(<ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref><sp/>*<sp/><ref refid="group__misc_1ga22ca4e91e5fdc4ece6da93f78ec44790" kindref="member">linphone_xml_rpc_request_cbs_ref</ref>(<ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref><sp/>*cbs)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_object_ref(cbs);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cbs;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga9fe1ea2ad50d5da7030532b6262860c8" kindref="member">linphone_xml_rpc_request_cbs_unref</ref>(<ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref><sp/>*cbs)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_object_unref(cbs);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__misc_1gacc604493e3f4ce0b4a1b960e029845b9" kindref="member">linphone_xml_rpc_request_cbs_get_user_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref><sp/>*cbs)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cbs-&gt;user_data;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga0aaa72f83fd6cb43dfdc4c1b75401fed" kindref="member">linphone_xml_rpc_request_cbs_set_user_data</ref>(<ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref><sp/>*cbs,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ud)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbs-&gt;user_data<sp/>=<sp/>ud;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="group__misc_1gaf6443bc25b7cbab080bd6a2b19738a6f" kindref="member">LinphoneXmlRpcRequestCbsResponseCb</ref><sp/><ref refid="group__misc_1ga33be73f029f8432e9cc6636a9cc22eee" kindref="member">linphone_xml_rpc_request_cbs_get_response</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref><sp/>*cbs)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cbs-&gt;response;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga0de27af78035916a98ab886a61d5d770" kindref="member">linphone_xml_rpc_request_cbs_set_response</ref>(<ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref><sp/>*cbs,<sp/><ref refid="group__misc_1gaf6443bc25b7cbab080bd6a2b19738a6f" kindref="member">LinphoneXmlRpcRequestCbsResponseCb</ref><sp/>cb)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbs-&gt;response<sp/>=<sp/>cb;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>format_request(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>si[64];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_list_t<sp/>*arg_ptr<sp/>=<sp/>request-&gt;arg_list;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlBufferPtr<sp/>buf;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlTextWriterPtr<sp/>writer;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;<ref refid="struct__LinphoneXmlRpcRequest_1a6dcc0eb8ec8c82b2b9ac2fd346d3fad8" kindref="member">content</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_free(request-&gt;<ref refid="struct__LinphoneXmlRpcRequest_1a6dcc0eb8ec8c82b2b9ac2fd346d3fad8" kindref="member">content</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;<ref refid="struct__LinphoneXmlRpcRequest_1a6dcc0eb8ec8c82b2b9ac2fd346d3fad8" kindref="member">content</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>xmlBufferCreate();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms_error(</highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>the<sp/>XML<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer<sp/>=<sp/>xmlNewTextWriterMemory(buf,<sp/>0);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms_error(</highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>the<sp/>XML<sp/>writer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterStartDocument(writer,<sp/></highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UTF-8&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterStartElement(writer,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*)</highlight><highlight class="stringliteral">&quot;methodCall&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterWriteElement(writer,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*)</highlight><highlight class="stringliteral">&quot;methodName&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*)request-&gt;method);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterStartElement(writer,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*)</highlight><highlight class="stringliteral">&quot;params&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__LinphoneXmlRpcArg" kindref="compound">LinphoneXmlRpcArg</ref><sp/>*arg<sp/>=<sp/>(<ref refid="struct__LinphoneXmlRpcArg" kindref="compound">LinphoneXmlRpcArg</ref><sp/>*)arg_ptr-&gt;data;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(err<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterStartElement(writer,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*)</highlight><highlight class="stringliteral">&quot;param&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterStartElement(writer,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*)</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(arg-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LinphoneXmlRpcArgNone:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LinphoneXmlRpcArgInt:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(si,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(si));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(si,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(si),<sp/></highlight><highlight class="stringliteral">&quot;%i&quot;</highlight><highlight class="normal">,<sp/>arg-&gt;data.i);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterWriteElement(writer,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*)</highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*)si);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LinphoneXmlRpcArgString:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterWriteElement(writer,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*)</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*)arg-&gt;data.s);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>the<sp/>&quot;value&quot;<sp/>element.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterEndElement(writer);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>the<sp/>&quot;param&quot;<sp/>element.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterEndElement(writer);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_ptr<sp/>=<sp/>arg_ptr-&gt;next;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>the<sp/>&quot;params&quot;<sp/>element.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterEndElement(writer);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>the<sp/>&quot;methodCall&quot;<sp/>element.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterEndElement(writer);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>xmlTextWriterEndDocument(writer);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xmlTextWriterEndDocument<sp/>returns<sp/>the<sp/>size<sp/>of<sp/>the<sp/>content.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;<ref refid="struct__LinphoneXmlRpcRequest_1a6dcc0eb8ec8c82b2b9ac2fd346d3fad8" kindref="member">content</ref><sp/>=<sp/>belle_sip_strdup((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buf-&gt;content);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeTextWriter(writer);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlBufferFree(buf);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_arg(<ref refid="struct__LinphoneXmlRpcArg" kindref="compound">LinphoneXmlRpcArg</ref><sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((arg-&gt;type<sp/>==<sp/>LinphoneXmlRpcArgString)<sp/>&amp;&amp;<sp/>(arg-&gt;data.s<sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_free(arg-&gt;data.s);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_free(arg);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_io_error_from_post_xml_rpc_request(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>belle_sip_io_error_event_t<sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request<sp/>=<sp/>(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*)data;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms_error(</highlight><highlight class="stringliteral">&quot;I/O<sp/>Error<sp/>during<sp/>XML-RPC<sp/>request<sp/>sending&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;status<sp/>=<sp/>LinphoneXmlRpcStatusFailed;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;callbacks-&gt;response<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;callbacks-&gt;response(request);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__misc_1gac86ca7658bc3d9216a4549f7a4591932" kindref="member">linphone_xml_rpc_request_unref</ref>(request);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_auth_requested_from_post_xml_rpc_request(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>belle_sip_auth_event_t<sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request<sp/>=<sp/>(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*)data;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms_error(</highlight><highlight class="stringliteral">&quot;Authentication<sp/>error<sp/>during<sp/>XML-RPC<sp/>request<sp/>sending&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;status<sp/>=<sp/>LinphoneXmlRpcStatusFailed;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;callbacks-&gt;response<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;callbacks-&gt;response(request);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__misc_1gac86ca7658bc3d9216a4549f7a4591932" kindref="member">linphone_xml_rpc_request_unref</ref>(request);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parse_valid_xml_rpc_response(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*response_body)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xmlparsing__context" kindref="compound">xmlparsing_context_t</ref><sp/>*xml_ctx<sp/>=<sp/>linphone_xmlparsing_context_new();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSetGenericErrorFunc(xml_ctx,<sp/>linphone_xmlparsing_genericxml_error);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;status<sp/>=<sp/>LinphoneXmlRpcStatusFailed;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml_ctx-&gt;doc<sp/>=<sp/>xmlReadDoc((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)response_body,<sp/>0,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xml_ctx-&gt;doc<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*response_str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linphone_create_xml_xpath_context(xml_ctx)<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(request-&gt;response.type)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LinphoneXmlRpcArgInt:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_str<sp/>=<sp/>linphone_get_xml_text_content(xml_ctx,<sp/></highlight><highlight class="stringliteral">&quot;/methodResponse/params/param/value/int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(response_str<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;response.data.i<sp/>=<sp/>atoi(response_str);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;status<sp/>=<sp/>LinphoneXmlRpcStatusOk;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LinphoneXmlRpcArgString:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_str<sp/>=<sp/>linphone_get_xml_text_content(xml_ctx,<sp/></highlight><highlight class="stringliteral">&quot;/methodResponse/params/param/value/string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(response_str<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;response.data.s<sp/>=<sp/>belle_sip_strdup(response_str);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;status<sp/>=<sp/>LinphoneXmlRpcStatusOk;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(response_str)<sp/>linphone_free_xml_text_content(response_str);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms_warning(</highlight><highlight class="stringliteral">&quot;Wrongly<sp/>formatted<sp/>XML-RPC<sp/>response:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>xml_ctx-&gt;errorBuffer);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal">end:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linphone_xmlparsing_context_destroy(xml_ctx);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;callbacks-&gt;response<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;callbacks-&gt;response(request);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>notify_xml_rpc_error(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;status<sp/>=<sp/>LinphoneXmlRpcStatusOk;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;callbacks-&gt;response<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;callbacks-&gt;response(request);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_response_from_post_xml_rpc_request(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>belle_http_response_event_t<sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request<sp/>=<sp/>(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*)data;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>answer<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;response)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/>belle_http_response_get_status_code(event-&gt;response);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/>200)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Valid<sp/>response<sp/>from<sp/>the<sp/>server.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse_valid_xml_rpc_response(request,<sp/>belle_sip_message_get_body((belle_sip_message_t<sp/>*)event-&gt;response));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notify_xml_rpc_error(request);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__misc_1gac86ca7658bc3d9216a4549f7a4591932" kindref="member">linphone_xml_rpc_request_unref</ref>(request);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*<sp/>_linphone_xml_rpc_request_new(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*method,<sp/><ref refid="group__misc_1ga29aa8f6ff6f9b210ac8f0b93112879b4" kindref="member">LinphoneXmlRpcArgType</ref><sp/>return_type)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request<sp/>=<sp/>belle_sip_object_new(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;callbacks<sp/>=<sp/>linphone_xml_rpc_request_cbs_new();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;status<sp/>=<sp/>LinphoneXmlRpcStatusPending;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;response.type<sp/>=<sp/>return_type;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;method<sp/>=<sp/>belle_sip_strdup(method);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_linphone_xml_rpc_request_add_int_arg(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__LinphoneXmlRpcArg" kindref="compound">LinphoneXmlRpcArg</ref><sp/>*arg<sp/>=<sp/>belle_sip_malloc0(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__LinphoneXmlRpcArg" kindref="compound">LinphoneXmlRpcArg</ref>));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg-&gt;type<sp/>=<sp/>LinphoneXmlRpcArgInt;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg-&gt;data.i<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;arg_list<sp/>=<sp/>belle_sip_list_append(request-&gt;arg_list,<sp/>arg);</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_linphone_xml_rpc_request_add_string_arg(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__LinphoneXmlRpcArg" kindref="compound">LinphoneXmlRpcArg</ref><sp/>*arg<sp/>=<sp/>belle_sip_malloc0(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__LinphoneXmlRpcArg" kindref="compound">LinphoneXmlRpcArg</ref>));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg-&gt;type<sp/>=<sp/>LinphoneXmlRpcArgString;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg-&gt;data.s<sp/>=<sp/>belle_sip_strdup(value);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;arg_list<sp/>=<sp/>belle_sip_list_append(request-&gt;arg_list,<sp/>arg);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_linphone_xml_rpc_request_destroy(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_list_free_with_data(request-&gt;arg_list,<sp/>(void<sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*))free_arg);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((request-&gt;response.type<sp/>==<sp/>LinphoneXmlRpcArgString)<sp/>&amp;&amp;<sp/>(request-&gt;response.data.s<sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_free(request-&gt;response.data.s);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;<ref refid="struct__LinphoneXmlRpcRequest_1a6dcc0eb8ec8c82b2b9ac2fd346d3fad8" kindref="member">content</ref>)<sp/>belle_sip_free(request-&gt;<ref refid="struct__LinphoneXmlRpcRequest_1a6dcc0eb8ec8c82b2b9ac2fd346d3fad8" kindref="member">content</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_free(request-&gt;method);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__misc_1ga9fe1ea2ad50d5da7030532b6262860c8" kindref="member">linphone_xml_rpc_request_cbs_unref</ref>(request-&gt;callbacks);</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_linphone_xml_rpc_session_destroy(<ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref><sp/>*session)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_free(session-&gt;url);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">BELLE_SIP_DECLARE_NO_IMPLEMENTED_INTERFACES(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal">BELLE_SIP_DECLARE_NO_IMPLEMENTED_INTERFACES(<ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">BELLE_SIP_INSTANCIATE_VPTR(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref>,<sp/>belle_sip_object_t,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(belle_sip_object_destroy_t)_linphone_xml_rpc_request_destroy,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">//<sp/>clone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">//<sp/>marshal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE</highlight></codeline>
<codeline lineno="282"><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">BELLE_SIP_INSTANCIATE_VPTR(<ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref>,<sp/>belle_sip_object_t,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(belle_sip_object_destroy_t)_linphone_xml_rpc_session_destroy,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">//<sp/>clone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">//<sp/>marshal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE</highlight></codeline>
<codeline lineno="289"><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*<sp/><ref refid="group__misc_1ga1c48c4b11f5e5125c55a5aab2fc6c9ec" kindref="member">linphone_xml_rpc_request_new</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*method,<sp/><ref refid="group__misc_1ga29aa8f6ff6f9b210ac8f0b93112879b4" kindref="member">LinphoneXmlRpcArgType</ref><sp/>return_type)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request<sp/>=<sp/>_linphone_xml_rpc_request_new(method,<sp/>return_type);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format_request(request);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*<sp/><ref refid="group__misc_1gac4a0a101d04903a406339315660ec4d3" kindref="member">linphone_xml_rpc_request_new_with_args</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*method,<sp/><ref refid="group__misc_1ga29aa8f6ff6f9b210ac8f0b93112879b4" kindref="member">LinphoneXmlRpcArgType</ref><sp/>return_type,<sp/>...)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>cont<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__misc_1ga29aa8f6ff6f9b210ac8f0b93112879b4" kindref="member">LinphoneXmlRpcArgType</ref><sp/>arg_type;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request<sp/>=<sp/>_linphone_xml_rpc_request_new(method,<sp/>return_type);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(args,<sp/>return_type);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cont)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>=<sp/>va_arg(args,<sp/><ref refid="group__misc_1ga29aa8f6ff6f9b210ac8f0b93112879b4" kindref="member">LinphoneXmlRpcArgType</ref>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(arg_type)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LinphoneXmlRpcArgNone:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cont<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LinphoneXmlRpcArgInt:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_linphone_xml_rpc_request_add_int_arg(request,<sp/>va_arg(args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LinphoneXmlRpcArgString:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_linphone_xml_rpc_request_add_string_arg(request,<sp/>va_arg(args,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format_request(request);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*<sp/><ref refid="group__misc_1gaecca690c97be9ed9fe805343deec62a6" kindref="member">linphone_xml_rpc_request_ref</ref>(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_object_ref(request);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1gac86ca7658bc3d9216a4549f7a4591932" kindref="member">linphone_xml_rpc_request_unref</ref>(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_object_unref(request);</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__misc_1gadbfd9726dbdbf5ff325b5b5707f739bb" kindref="member">linphone_xml_rpc_request_get_user_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request-&gt;user_data;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga9e8431c4fda6517cb7f6d032100bd87d" kindref="member">linphone_xml_rpc_request_set_user_data</ref>(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ud)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;user_data<sp/>=<sp/>ud;</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1gaab4a08b402cea8c064636fae56a5c979" kindref="member">linphone_xml_rpc_request_add_int_arg</ref>(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_linphone_xml_rpc_request_add_int_arg(request,<sp/>value);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format_request(request);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga53187e8e8620520072168481b920af8d" kindref="member">linphone_xml_rpc_request_add_string_arg</ref>(<ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_linphone_xml_rpc_request_add_string_arg(request,<sp/>value);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format_request(request);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><ref refid="struct__LinphoneXmlRpcRequestCbs" kindref="compound">LinphoneXmlRpcRequestCbs</ref><sp/>*<sp/><ref refid="group__misc_1gacdd94b9dd3ac3ca10794772e2bbc8502" kindref="member">linphone_xml_rpc_request_get_callbacks</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request-&gt;callbacks;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__misc_1ga72a6b0b5c193c2ec8e246b1325398e06" kindref="member">linphone_xml_rpc_request_get_content</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request-&gt;<ref refid="struct__LinphoneXmlRpcRequest_1a6dcc0eb8ec8c82b2b9ac2fd346d3fad8" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="group__misc_1ga206d079816de950cfc54433f0db54e68" kindref="member">LinphoneXmlRpcStatus</ref><sp/><ref refid="group__misc_1gacee067f188ad31229c552091e221477d" kindref="member">linphone_xml_rpc_request_get_status</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request-&gt;status;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga408683ade74e2c264cdfb632ffa9e7ed" kindref="member">linphone_xml_rpc_request_get_int_response</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request-&gt;response.data.i;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__misc_1gacb8ee2886de3b4a01d874e239dd4f8ae" kindref="member">linphone_xml_rpc_request_get_string_response</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request-&gt;response.data.s;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref><sp/>*<sp/><ref refid="group__misc_1gad906eec60ae17e3f0891920759d4d62f" kindref="member">linphone_xml_rpc_session_new</ref>(<ref refid="struct__LinphoneCore" kindref="compound">LinphoneCore</ref><sp/>*core,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*url)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref><sp/>*session<sp/>=<sp/>belle_sip_object_new(<ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;core<sp/>=<sp/>core;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;url<sp/>=<sp/>belle_sip_strdup(url);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>session;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref><sp/>*<sp/><ref refid="group__misc_1ga6fdddc46a583cdad27f9186b3aa01c4a" kindref="member">linphone_xml_rpc_session_ref</ref>(<ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref><sp/>*session)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_object_ref(session);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>session;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga594c174060218a5d7f032dc4912d0b0e" kindref="member">linphone_xml_rpc_session_unref</ref>(<ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref><sp/>*session)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_object_unref(session);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__misc_1ga4121beeab0869562a9d98275921eaa7a" kindref="member">linphone_xml_rpc_session_get_user_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref><sp/>*session)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>session-&gt;user_data;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga777bcf84afd987f5c987d46e72dd1771" kindref="member">linphone_xml_rpc_session_set_user_data</ref>(<ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref><sp/>*session,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ud)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;user_data<sp/>=<sp/>ud;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga04d99efae20b1df40cf56505cd5aa0a5" kindref="member">linphone_xml_rpc_session_send_request</ref>(<ref refid="struct__LinphoneXmlRpcSession" kindref="compound">LinphoneXmlRpcSession</ref><sp/>*session,<sp/><ref refid="struct__LinphoneXmlRpcRequest" kindref="compound">LinphoneXmlRpcRequest</ref><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_http_request_listener_callbacks_t<sp/>cbs<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_http_request_listener_t<sp/>*l;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_generic_uri_t<sp/>*uri;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_http_request_t<sp/>*req;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_memory_body_handler_t<sp/>*bh;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__misc_1gaecca690c97be9ed9fe805343deec62a6" kindref="member">linphone_xml_rpc_request_ref</ref>(request);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri<sp/>=<sp/>belle_generic_uri_parse(session-&gt;url);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!uri)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>send<sp/>request,<sp/>URL<sp/>%s<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">,<sp/>session-&gt;url);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_io_error_from_post_xml_rpc_request(request,<sp/>NULL);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req<sp/>=<sp/>belle_http_request_create(</highlight><highlight class="stringliteral">&quot;POST&quot;</highlight><highlight class="normal">,<sp/>uri,<sp/>belle_sip_header_content_type_create(</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xml&quot;</highlight><highlight class="normal">),<sp/>NULL);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!req)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_object_unref(uri);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_io_error_from_post_xml_rpc_request(request,<sp/>NULL);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="group__misc_1ga72a6b0b5c193c2ec8e246b1325398e06" kindref="member">linphone_xml_rpc_request_get_content</ref>(request);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bh<sp/>=<sp/>belle_sip_memory_body_handler_new_copy_from_buffer(data,<sp/>strlen(data),<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_sip_message_set_body_handler(BELLE_SIP_MESSAGE(req),<sp/>BELLE_SIP_BODY_HANDLER(bh));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbs.process_response<sp/>=<sp/>process_response_from_post_xml_rpc_request;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbs.process_io_error<sp/>=<sp/>process_io_error_from_post_xml_rpc_request;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbs.process_auth_requested<sp/>=<sp/>process_auth_requested_from_post_xml_rpc_request;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>belle_http_request_listener_create_from_callbacks(&amp;cbs,<sp/>request);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belle_http_provider_send_request(session-&gt;core-&gt;http_provider,<sp/>req,<sp/>l);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/SSD/workspace_mac/linphone-ios/submodules/linphone/coreapi/xmlrpc.c"/>
  </compounddef>
</doxygen>
